✅ 대리자 체인 (Delegate Chain) 완전 정복 노트 (게임 프로그래밍 취준생용)

🎯 이 문서는 '대리자 체인' 개념을 쉽게 이해하고, 게임 개발에서 어디에 쓸 수 있는지 예시와 함께 정리한 파일입니다.
강사님이 강조하셨듯이, 기술 면접에서 델리게이트와 이벤트는 꼭 나오므로 완벽하게 이해하고 넘어가자!

---

# 1. 대리자(Delegate)란? 🕹️

- 델리게이트는 **메서드를 대신 호출할 수 있는 리모컨** 같은 존재다.
- 예를 들어 `Notify`라는 델리게이트는 string을 받아서 void를 반환하는 메서드를 대신 호출할 수 있다.

```csharp
delegate void Notify(string message);
```

---

# 2. 대리자 체인이란? ⛓️

- **델리게이트 체인**이란, 여러 개의 메서드를 한 델리게이트에 연결해서 **한 번에 모두 호출**되게 하는 것!
- 체인은 `+=`로 연결, `-=`로 제거할 수 있다.

---

# 3. 실전 예제 코드 설명 ✨

```csharp
Notifier notifier = new Notifier();
EventListener listener1 = new EventListener("Listener1");
EventListener listener2 = new EventListener("Listener2");
EventListener listener3 = new EventListener("Listener3");

notifier.EventOccured += listener1.SomethingHappened;
notifier.EventOccured += listener2.SomethingHappened;
notifier.EventOccured += listener3.SomethingHappened;

notifier.EventOccured("You've got mail!"); // 3명 모두 호출됨
```

💡 출력:
```
Listener1.SomethingHappened: You've got mail!
Listener2.SomethingHappened: You've got mail!
Listener3.SomethingHappened: You've got mail!
```

### 체인 제거:
```csharp
notifier.EventOccured -= listener2.SomethingHappened;
notifier.EventOccured!("Download Complete!");
```

💡 출력:
```
Listener1.SomethingHappened: Download Complete!
Listener3.SomethingHappened: Download Complete!
```

### 수동 체인 구성도 가능:
```csharp
notifier.EventOccured = new Notify(listener1.SomethingHappened)
                       + new Notify(listener3.SomethingHappened);
notifier.EventOccured("Nuclear launch detected!");
```

---

# 4. 게임 예시 🎮

📢 예를 들어 플레이어가 보스를 처치했을 때:
- 음악 변경
- UI 팝업
- 업적 저장
- 이펙트 재생

이걸 전부 한 곳에서 처리하려면?  
✅ 대리자 체인으로 연결된 메서드들이 **한 번에 실행**되도록 만들 수 있음!

```csharp
GameEvents.OnBossDefeated += PlayVictoryMusic;
GameEvents.OnBossDefeated += ShowClearPopup;
GameEvents.OnBossDefeated += SaveAchievement;
GameEvents.OnBossDefeated += PlayExplosionEffect;

GameEvents.OnBossDefeated?.Invoke(); // 모두 실행됨!
```

---

# 5. 핵심 요약표 🧠

| 개념 | 설명 | 예시 |
|------|------|------|
| 대리자 | 함수 리모컨 | delegate void Notify(string msg) |
| 대리자 체인 | 여러 함수 연결 | += 로 추가, -= 로 제거 |
| 체인 호출 | 순서대로 모두 실행 | notifier.EventOccured("Message") |
| 이벤트 예시 | UI/음악/이펙트 동시 처리 | OnBossDefeated 체인 호출 |

---

# 6. 면접에서 이렇게 말하자 🎙️

> "이벤트 발생 시 여러 작업이 동시에 필요할 수 있어서, 대리자 체인을 통해 관련된 메서드를 한 번에 호출되게 구현했습니다."

🔥 깔끔하게 정리된 이 한마디가 **실무형 개발자**로 보이게 만든다!

---

이제 대리자 체인도 마스터했으니, 이벤트 기반 프로그래밍도 자신 있게!  
게임 개발 취준생으로서 필수 개념이니 복습 꼭 해두자 💪
