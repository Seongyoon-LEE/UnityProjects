
==============================
🌀 C# IEnumerable / IEnumerator 기초 + 인덱서 클래스 예제 정리
==============================

이 문서는 직접 만든 리스트 클래스(MyList)에 대해 C#의 `IEnumerable`과 `IEnumerator` 인터페이스를 구현하여 `foreach` 문에서 순회 가능한 객체를 만드는 방법을 **초등학생도 이해할 수 있게** 정리한 자료입니다 😄

------------------------------
✅ 목표
------------------------------
- 인덱서를 지원하는 나만의 리스트 만들기
- `foreach`로 순회 가능하도록 만들기
- `IEnumerator`, `IEnumerable` 인터페이스 이해

------------------------------
🔹 클래스 설명: MyList
------------------------------

✔️ 주요 기능:
- 내부 배열을 자동 확장하면서 값을 저장 (`Array.Resize()`)
- 인덱서를 이용해 배열처럼 사용 가능 (`myList[0] = 10` 등)
- `foreach`문 사용을 위해 반복기 기능 구현

✔️ 코드 요약:
```csharp
class MyList : IEnumerable, IEnumerator
{
    private int[] arr;
    int position = -1;

    public MyList() { arr = new int[3]; }

    public int this[int index]
    {
        get => arr[index];
        set
        {
            if (index >= arr.Length)
                Array.Resize(ref arr, index + 1);
            arr[index] = value;
        }
    }

    public object Current => arr[position];

    public bool MoveNext()
    {
        if (position == arr.Length - 1)
        {
            Reset();
            return false;
        }
        position++;
        return position < arr.Length;
    }

    public void Reset() => position = -1;

    public IEnumerator GetEnumerator() => this;
}
```

------------------------------
🔸 Main 함수 예제:
------------------------------
```csharp
MyList myList = new MyList();
for (int i = 0; i < 5; i++)
{
    myList[i] = i + 1; // 배열 자동 확장
}

foreach (var item in myList)
{
    Console.WriteLine(item);
}
```

✔️ 출력 결과:
```
Array Resized: 4
Array Resized: 5
1
2
3
4
5
```

------------------------------
🎮 Unity 게임 예시 응용:
------------------------------

✔️ 인벤토리 슬롯 리스트 만들기
- `MyList` 구조를 응용해 인벤토리에서 아이템을 자동으로 추가하며 순회할 수 있음.
- 예: `foreach`로 아이템 전체를 순회하며 아이템 이름 출력

✔️ 스킬 목록 자동 확장
- 플레이어가 스킬을 배울 때마다 `mySkillList[i] = 새 스킬` 구조 사용 가능

------------------------------
📌 전체 요약
------------------------------

| 개념 | 설명 |
|------|------|
| Indexer | 배열처럼 클래스 안의 데이터 접근 가능 |
| Array.Resize | 배열 크기 동적 조절 |
| IEnumerable | foreach에서 순회 가능하도록 만드는 인터페이스 |
| IEnumerator | 순회 중 상태를 관리하는 인터페이스 |
| Unity 응용 | 인벤토리, 스킬 목록, 퀘스트 리스트 등 순회 가능한 클래스 제작 가능 |

이걸 이해하면 C# 객체지향 프로그래밍이 한 단계 레벨업!  
Unity에서도 인벤토리 시스템, 몬스터 리스트 관리 등에 응용 가능해요 💪
