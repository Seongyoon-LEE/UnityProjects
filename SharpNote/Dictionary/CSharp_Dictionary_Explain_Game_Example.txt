
==============================
📘 C# Dictionary 완벽 정리 + 게임 예시 + 쉬운 설명
==============================

이 문서는 C#의 `Dictionary<TKey, TValue>` 자료구조에 대해 초등학생도 이해할 수 있게 아주 쉽게 설명하고,  
게임 개발에서도 어떻게 쓰이는지 기똥차게 정리한 자료예요 😎

------------------------------
✅ Dictionary란?
------------------------------
✔️ Key(이름표)와 Value(값)를 쌍으로 저장하는 자료형이에요.
✔️ 이름표(Key)를 가지고 빠르게 값을 찾을 수 있어요.
✔️ 책에서 단어(Key)로 뜻(Value)을 찾는 "사전"과 아주 비슷해요!

------------------------------
🔸 기본 사용 예시
------------------------------
```csharp
Dictionary<string, string> dic = new Dictionary<string, string>();
dic["하나"] = "one";
dic["둘"] = "two";
dic["셋"] = "three";

foreach (KeyValuePair<string, string> kvp in dic)
{
    Console.WriteLine($"Key: {kvp.Key}, Value: {kvp.Value}");
}
```

✔️ 출력 결과:
```
Key: 하나, Value: one
Key: 둘, Value: two
Key: 셋, Value: three
```

------------------------------
🔹 Dictionary 주요 기능
------------------------------
| 기능 | 메서드/속성 |
|------|--------------|
| 값 추가 | dic["key"] = value; |
| 값 가져오기 | dic["key"] |
| 값 삭제 | dic.Remove("key") |
| 포함 여부 | dic.ContainsKey("key") |
| 전체 반복 | foreach (var kvp in dic) |
| 개수 확인 | dic.Count |

------------------------------
🔸 숫자 Dictionary 예시
------------------------------
```csharp
Dictionary<string, int> movies = new Dictionary<string, int>();
movies["마녀"] = 100;
movies["마법사"] = 150;
movies["범죄의 도시"] = 500;
movies["광장"] = 300;

foreach (var m in movies)
{
    Console.WriteLine($"영화: {m.Key}, {m.Value}만");
}
```

------------------------------
🎮 Unity 게임 개발 활용 예시
------------------------------

✔️ 예 1: 아이템 설명 사전
```csharp
Dictionary<string, string> itemDesc = new Dictionary<string, string>();
itemDesc["포션"] = "체력을 회복해주는 약";
itemDesc["폭탄"] = "적에게 큰 피해를 준다";
```

✔️ 예 2: 몬스터 이름으로 체력 찾기
```csharp
Dictionary<string, int> monsterHP = new Dictionary<string, int>();
monsterHP["슬라임"] = 50;
monsterHP["오크"] = 200;
monsterHP["보스"] = 1000;

int hp = monsterHP["오크"]; // 200
```

✔️ 예 3: 다국어 번역 처리
```csharp
Dictionary<string, string> langKR = new Dictionary<string, string>();
langKR["start"] = "시작";
langKR["exit"] = "종료";
```

------------------------------
📌 Dictionary vs Hashtable 차이
------------------------------
| 항목 | Dictionary | Hashtable |
|------|------------|-----------|
| 제네릭 지원 | ✅ (타입 안전) | ❌ object 기반 |
| 성능 | 빠름 | 느림 |
| 사용 추천 | ✅ | ❌ (구버전용) |

💡 실무/Unity에서는 거의 항상 `Dictionary<TKey, TValue>`를 씁니다!

------------------------------
✅ 마무리 한마디
------------------------------
Dictionary는 **빠르게 찾고 저장**할 수 있어서 정말 많이 써요!  
게임 아이템 정보, 설정 값, 번역, 캐릭터 데이터 등등 전부 딕셔너리로 관리하면 깔끔하고 효율적이에요 💪

진짜 게임 프로그래머처럼 딕셔너리 활용해보자 🎮🔥
