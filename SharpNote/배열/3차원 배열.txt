📘 C# 3차원 배열 완전 기초 정복! (초등학생도 이해 가능 버전) 😄

---

✅ 1. 3차원 배열이 뭐야?

> 2차원 배열이 '표'라면, 3차원 배열은 '표 여러 장'이 모인 느낌이야!  
> 예를 들어, **건물의 층(층, 행, 열)**이나 **게임의 스테이지, 좌표, 아이템 슬롯** 등에 쓸 수 있어!

```csharp
int[,,] arr = new int[2, 3, 4]
{
    {
        { 1, 2, 3, 4},
        { 5, 6, 7, 8},
        { 9, 10, 11, 12 }
    },
    {
        { 13, 14, 15, 16 },
        { 17, 18, 19, 20 },
        { 21, 22, 23, 34}
    }
};
```

- [2, 3, 4]는
  - 층: 2층 (0, 1)
  - 줄: 각 층마다 3줄
  - 칸: 각 줄마다 4칸

---

✅ 2. 3중 for문으로 값 꺼내기

```csharp
for (int i = 0; i < arr.GetLength(0); i++) // 층
{
    for (int j = 0; j < arr.GetLength(1); j++) // 줄
    {
        for (int k = 0; k < arr.GetLength(2); k++) // 칸
        {
            Console.WriteLine($"{i} {j} {k} : {arr[i, j, k]}");
        }
        Console.WriteLine();
    }
    Console.WriteLine();
}
```

- `GetLength(0)` = 층 수
- `GetLength(1)` = 줄 수
- `GetLength(2)` = 칸 수

---

✅ 3. 게임에서 3차원 배열 활용 예시 🎮

---

🎯 **예: 3D 맵 타일 정보 저장하기**

```csharp
// [층, 행, 열]로 구성된 게임 타일 정보
int[,,] map = new int[2, 3, 3]
{
    {
        { 1, 1, 0 },
        { 1, 0, 0 },
        { 1, 1, 1 }
    },
    {
        { 0, 0, 0 },
        { 1, 1, 0 },
        { 0, 1, 1 }
    }
};

// 출력
for (int floor = 0; floor < 2; floor++)
{
    Console.WriteLine($"=== {floor}층 ===");
    for (int row = 0; row < 3; row++)
    {
        for (int col = 0; col < 3; col++)
        {
            Console.Write($"{map[floor, row, col]} ");
        }
        Console.WriteLine();
    }
}
```

- `1`: 이동 가능한 길
- `0`: 벽이나 못 가는 곳

---

🎯 **예: 인벤토리 시스템 (가방 3개, 2줄, 2칸짜리)**

```csharp
string[,,] inventory = new string[3, 2, 2]
{
    {
        { "포션", "빈칸" },
        { "검", "방패" }
    },
    {
        { "화살", "빈칸" },
        { "고기", "빈칸" }
    },
    {
        { "열쇠", "빈칸" },
        { "빈칸", "빈칸" }
    }
};

// 가방 전체 출력
for (int bag = 0; bag < 3; bag++)
{
    Console.WriteLine($"가방 {bag}번:");
    for (int y = 0; y < 2; y++)
    {
        for (int x = 0; x < 2; x++)
        {
            Console.Write($"{inventory[bag, y, x]} ");
        }
        Console.WriteLine();
    }
    Console.WriteLine();
}
```

---

✅ 피드백 & 팁 🧠

- 3차원 배열은 복잡해 보이지만 **층-행-열 구조**로 생각하면 쉬워져!
- 맵, 공간, 인벤토리처럼 **공간이나 위치 정보**가 필요한 곳에서 매우 유용해!
- for문을 3개 돌리면 다 탐색할 수 있어!

---

✅ 정리 요약표

| 개념 | 설명 |
|------|------|
| `[,,]` | 3차원 배열 선언 |
| `GetLength(0)` | 층 수 |
| `GetLength(1)` | 행 수 |
| `GetLength(2)` | 열 수 |
| 게임 활용 | 맵 층 구조, 인벤토리, 스테이지 데이터 등 |

---

💪 3차원 배열도 해냈다!  
진짜 고급 배열까지 마스터 중이야!  
이제 배열로 간단한 3D 게임 설계도 가능할 걸?! 🎮🔥