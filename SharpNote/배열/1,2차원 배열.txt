📘 C# 2차원 배열 완전 기초 정복! (초등학생도 이해 가능 버전) 😄

---

✅ 1. 2차원 배열이 뭐야?

> 여러 줄로 나눠진 숫자들을 저장하고 싶을 때 쓰는 배열이야!  
> 마치 **행(row)**과 **열(column)**로 나눈 칸이 있는 **표**처럼 생각하면 돼!

```csharp
int[,] arr = new int[2, 3]
{
    {1, 2, 3},
    {4, 5, 6}
};
```

이건 이렇게 생긴 표를 만드는 거야:

```
[1, 2, 3]
[4, 5, 6]
```

- 2줄(행), 3칸(열)짜리 표야!
- `arr[0, 0] = 1`, `arr[1, 2] = 6` 이런 식으로 값을 꺼내 쓸 수 있어.

---

✅ 2. 배열 출력하기 (중첩 for문)

```csharp
for (int i = 0; i < arr.GetLength(0); i++) // 행 반복
{
    for (int j = 0; j < arr.GetLength(1); j++) // 열 반복
    {
        Console.WriteLine($"{i} {j}: {arr[i,j]}");
    }
    Console.WriteLine();
}
```

- `GetLength(0)`는 행(줄) 수
- `GetLength(1)`는 열(칸) 수

---

✅ 3. 구구단을 배열에 저장하기! ✏️

```csharp
int[,] GuguDan = new int[8, 9];
for (int i = 0; i < 8; i++)
{
    for (int j = 0; j < 9; j++)
    {
        GuguDan[i, j] = (i + 2) * (j + 1); // 구구단 계산식
        Console.WriteLine($"{GuguDan[i, j],3}");
    }
    Console.WriteLine();
}
```

- `i + 2`: 2단부터 시작하려고!
- `j + 1`: 곱해질 숫자 (1~9)
- `,3`은 예쁘게 정렬하려고 3칸 공간을 주는 거야!

---

✅ 4. 배열을 선언할 때 값을 바로 넣는 방법도 있어!

```csharp
int[,] arr3 = { { 1, 2, 3 }, { 4, 5, 6 } };
```

👉 위에서 arr처럼 따로 크기를 안 써도 괜찮아! 컴파일러가 자동으로 크기를 계산해줘!

--- 

✅ 게임에서 쓰는 2차원 배열 예시 🎮

🎯 **예: 맵에 있는 몬스터 HP 정보 저장**

```csharp
int[,] monsterHP = new int[3, 3]
{
    { 100, 90, 80 },
    { 70, 60, 50 },
    { 40, 30, 20 }
};

for (int y = 0; y < 3; y++)
{
    for (int x = 0; x < 3; x++)
    {
        Console.WriteLine($"[{y},{x}] 위치 몬스터 HP: {monsterHP[y, x]}");
    }
}
```

🎯 **예: 캐릭터 공격력 테이블 (레벨 vs 무기)**

```csharp
int[,] attackPower = new int[3, 3]
{
    { 10, 20, 30 }, // 레벨 1
    { 15, 25, 35 }, // 레벨 2
    { 20, 30, 40 }  // 레벨 3
};

// 레벨 2, 무기 1번의 공격력은?
Console.WriteLine(attackPower[1, 1]); // 25
```

---

✅ 피드백 & 팁 🧠

- `2차원 배열`은 **표처럼 데이터 정리**할 때 최고야!
- 구구단처럼 규칙이 있는 값은 반복문으로 **자동 계산해서 넣을 수 있어!**
- **GetLength(0), GetLength(1)** 꼭 기억해! (행, 열)
- **게임에서는 좌표 기반 정보(맵, 대미지, 보상 등)**에 많이 써!

---

✅ 정리 요약표

| 개념 | 설명 |
|------|------|
| `[,]` | 2차원 배열 선언 |
| `GetLength(0)` | 행(row)의 길이 |
| `GetLength(1)` | 열(column)의 길이 |
| 중첩 for문 | 2차원 배열 순회할 때 사용 |
| 게임 활용 | 맵 정보, 몬스터 상태, 캐릭터 스탯 등 |

---

💪 잘 따라왔어!  
이제 2차원 배열은 너 손 안에 있어!  
다음엔 3차원 배열도 도전해볼까? 😎