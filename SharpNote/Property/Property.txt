📘 C# 프로퍼티(Property) 완전 쉽게 배우기!

안녕! 오늘은 "프로퍼티(Property)"라는 걸 배울 거야.
이건 마치 게임에서 캐릭터의 체력이나 점수를 '관리'하는 방법과 비슷해.

---

✅ 1. 왜 프로퍼티가 필요할까?
예를 들어 게임 캐릭터가 있다고 해보자.
그 캐릭터의 체력(`health`) 값을 마음대로 바꾸면 게임이 엉망이 되겠지?
그래서 `체력`을 직접 건드리지 못하게 감춰두고,
대신 안전하게 값을 가져오거나 바꿀 수 있는 '문'을 만들어줘.

이 문이 바로 **프로퍼티(Property)** 야!

---

✅ 2. Getter / Setter가 뭐야?
- `getter`: 값을 "얻는" 문
- `setter`: 값을 "설정하는" 문

예시)
```csharp
private int health; // 체력은 숨겨놔!

public int Health // 여기서부터는 문을 만든 거야!
{
    get { return health; }    // 가져오기 문
    set { health = value; }   // 설정하기 문
}
```

위 코드는 이렇게 생각해도 돼:
- `get`은 "체력이 얼마인지 알려줘~"
- `set`은 "체력을 몇으로 정할게!"

---

✅ 3. 전체 코드 예제와 설명
```csharp
class YourClass
{
    private int myField; // 진짜 값은 숨겨둠
    private int myField2;

    // 프로퍼티로 안전한 문 만들기!
    public int MyField
    {
        get { return myField; }      // 값을 가져올 수 있음
        set { myField = value; }     // 값을 바꿀 수 있음
    }

    public int MyField2
    {
        get { return myField2; }
        set { myField2 = value; }
    }
}
```

사용하는 법은 이렇게!
```csharp
YourClass obj = new YourClass();
obj.MyField = 10; // 값을 넣기
Console.WriteLine(obj.MyField); // 값을 꺼내기
```

---

✅ 4. 게임에서 자주 쓰는 예시: 캐릭터 체력
```csharp
class Player
{
    private int health = 100; // 체력은 감춰놓고

    public int Health
    {
        get { return health; }
        set
        {
            if (value < 0) health = 0;      // 음수면 0으로 고정
            else if (value > 100) health = 100;  // 100보다 크면 100으로 고정
            else health = value;           // 아니면 그대로 넣기
        }
    }
}
```

이제 이렇게 써!
```csharp
Player player = new Player();
player.Health -= 20; // 체력이 80이 됨
Console.WriteLine(player.Health); // 80 출력!
player.Health = -50; // 음수는 안돼!
Console.WriteLine(player.Health); // 0 출력!
```

---

✅ 정리!
- 프로퍼티는 값을 안전하게 주고받는 문이야
- 게임에서 캐릭터의 체력, 공격력, 점수 등 중요한 값에 자주 써!
- `get`은 값을 "가져오고", `set`은 값을 "넣어줘"

---

🎮 게임 만들 땐 프로퍼티로 캐릭터를 잘 관리하자! 😄