
==============================
🧠 C# 가변길이 배열 (Jagged Array) 설명서
==============================

이 문서는 C#의 가변길이 배열(Jagged Array)에 대해 아주 쉽게 정리한 자료입니다.  
Unity에서도 2D 데이터, 맵 구성, UI 슬롯 등 다양한 곳에 활용될 수 있어요 😄

------------------------------
✅ 가변길이 배열이란?
------------------------------
- "가변길이"라는 말은 줄마다(행마다) **길이가 다른 배열**을 의미해요.
- 예: 1번째 줄은 3개, 2번째 줄은 5개, 3번째 줄은 2개가 있을 수 있어요.

📌 정식 용어: **Jagged Array (들쭉날쭉 배열)**  
📌 형태: `int[][] jaggedArr = new int[행][];`  
(행의 개수만 먼저 정하고, 각 행에 원하는 열 길이 배열을 따로 지정)

------------------------------
🔸 예시 코드 1
------------------------------
```csharp
int[][] jaggedArr = new int[3][];

jaggedArr[0] = new int[5] { 1, 2, 3, 4, 5 };
jaggedArr[1] = new int[] { 60, 70, 80 };
jaggedArr[2] = new int[] { 100, 200, 300, 400 };

foreach(int[] row in jaggedArr)
{
    Console.WriteLine($"Length: {row.Length}");
    foreach(int num in row)
    {
        Console.WriteLine(num);
    }
    Console.WriteLine();
}
```

✔️ 출력:
```
Length: 5
1 2 3 4 5

Length: 3
60 70 80

Length: 4
100 200 300 400
```

------------------------------
🔸 예시 코드 2 - 선언과 초기화 동시에
------------------------------
```csharp
int[][] jagged2 = new int[2][]
{
    new int[] { 100, 200, 300 },
    new int[] { 6, 7, 8, 9 }
};
```

------------------------------
🎮 Unity 활용 예시
------------------------------
✔️ 2D 레벨 디자인: 각 줄마다 적 배치 수가 다를 때
✔️ UI 슬롯: 행마다 다른 수의 아이템을 표시할 때
✔️ 퍼즐 블록: 각 행마다 블록 수가 달라지는 퍼즐

```csharp
int[][] level = new int[][]
{
    new int[] { 1, 2 },
    new int[] { 1, 2, 3, 4 },
    new int[] { 9 }
};
```

------------------------------
📌 정리 요약
------------------------------
| 항목 | 설명 |
|------|------|
| 가변 배열 | 각 행마다 열의 개수가 달라도 되는 배열 |
| 선언 형식 | int[][] arr = new int[행수][]; |
| 초기화 방식 | arr[0] = new int[] { ... }; |
| Unity 응용 | 레벨 배열, UI, 맵 데이터 등 다양하게 사용 가능 |

------------------------------
✅ 마무리 한마디
------------------------------
Jagged Array는 2차원 배열보다 더 유연하게 행/열 구조를 다룰 수 있어요!  
게임 개발에서 상황에 따라 쓰면 아주 강력한 도구가 됩니다 💪🎮
