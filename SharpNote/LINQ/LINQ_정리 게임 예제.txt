
📘 [C# LINQ 복합 예제 - 초등학생도 이해할 수 있는 정리]

이 코드는 자동차, 배우, 작품 정보들을 LINQ를 이용해서 뽑아보고,
어떻게 조건을 걸고 조인을 하고, 평균이나 최대값을 계산할 수 있는지 보여줘요!
그리고 마지막엔 게임으로 비유해서 설명도 넣었어요 😊

--------------------------------------------------
🚗 1. 자동차(Car) 정보에서 조건에 맞는 것만 뽑기
--------------------------------------------------
Car[] cars = {
    new Car() {Cost = 56, MaxSpeed = 120},
    new Car() {Cost = 70, MaxSpeed = 150},
    ...
};

조건: 가격이 50 이상이고, 최고속도가 150 이상인 자동차만 뽑자!
그리고 전체 자동차들의 평균, 최대, 최소 속도도 같이 구하자.

잘못된 코드:
select new { car.Cost, ..., Max = cars.Max(...) }  // 반복 계산됨 ❌

👉 고치기:
1. 먼저 평균, 최대, 최소 계산하고 변수로 저장하자
2. 조건에 맞는 자동차만 따로 뽑자

📌 게임 비유: 자동차가 마리오 카트의 차량이라면,
- 150km 이상 + 50골드 이상 차량만 "고급 차"로 필터링해서 보여주는 거야!
- 전체 차들의 평균 속도는 게임 밸런스를 잡기 위한 참고 값이 되는 거지!

--------------------------------------------------
🎭 2. 배우(Profile)와 작품(Product) 연결 - 내부조인
--------------------------------------------------
Profile[] arrProfile = {
    new Profile() {Name = "정우성", Height = 186},
    new Profile() {Name = "박은빈", Height = 172},
    ...
};

Product[] arrProduct = {
    new Product() {Title = "서울의 봄", Star = "정우성"},
    new Product() {Title = "이상한 변호사 우영우", Star = "박은빈"},
    ...
};

👉 내부조인(join): 같은 이름이면 연결해서 보여줘!
예) 정우성 = 서울의 봄, 박은빈 = 이상한 변호사 우영우

📌 게임 비유: 캐릭터(배우)가 퀘스트(작품)를 맡는 거랑 같아!
- 이름이 같은 사람만 퀘스트를 받을 수 있어! (내부조인)

--------------------------------------------------
🌐 3. 배우와 작품 연결 - 외부조인 (작품 없으면 '그런 것 없음')
--------------------------------------------------
👉 외부조인(join ... into ... from ... in ... DefaultIfEmpty()):
연결되는 작품이 없어도 "그런 것 없음"이라고 넣어줘

📌 게임 비유: 퀘스트가 없는 캐릭터도 있지만, "없음"이라고 표시해주는 거야!
- 모든 캐릭터가 리스트에 나와야 할 때 씀!

--------------------------------------------------
📊 4. 키에 따른 그룹 나누기 + 통계 출력
--------------------------------------------------
키가 175cm 이상/미만인 사람들끼리 나눠서
- 몇 명인지 (Count)
- 최대, 최소, 평균 키 출력

group by를 사용하고, group.Key == true 인지로 조건 붙임

📌 게임 비유: 키 큰 캐릭터 / 작은 캐릭터로 팀을 나누고 평균 키를 보는 거야!
- 예: 농구 게임에서 팀 밸런스를 맞추기 위해 쓸 수 있어!

--------------------------------------------------
✅ 총정리 요약
--------------------------------------------------
✔ LINQ는 데이터를 정리하고 조건 걸고 통계낼 때 아주 강력해!
✔ 내부조인 / 외부조인은 관계형 데이터에서 자주 쓰는 기능이야
✔ group by를 이용하면 팀/카테고리 나누기도 쉽게 할 수 있어
✔ 게임 시스템에서도 캐릭터 능력 비교, 아이템 속성 조합, 퀘스트 연결 등에 응용 가능!

🎮 더 재미있게 배우고 싶다면?
→ “게임 속 캐릭터 능력치”나 “아이템 상점 데이터”로 바꿔보는 연습 해보자!
